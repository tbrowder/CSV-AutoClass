=begin pod

=head1 NAME

B<CSV-AutoClass> - Define a class with a CSV file and provide data for a list of class objects in the same file

=head1 SYNOPSIS

=begin code :lang<raku>

use CSV-AutoClass;

=end code

=head1 DESCRIPTION

CSV-AutoClass is a module with two accompanying programs:

=begin item 
C<csv2class> 

Converts a suitably-formatted CSV file into a class-generator module. 

For instance, given a CSV file named C<persons.cav>, the program will generate module C<Person.rakumod>
which can be used by another included program, C<use-class>, to demonstrate using the module.
=end item

=begin item 
C<use-class>

Uses a CSV file with class data to list all the data. 
It uses C<CSV-AutoClass> routines provided for interrogating any suitable list of C<CSV-AutoClass objects>.

=end item

=head2 Notes

The header line in the CSV data file is currently designed to use alphanumeric characters which
works fine with files designed by the user. However, files produced by outside
entities, such as banks, stock markets, and government agencies, may use other
symbols (such as '#') that cannot be used in Raku for class attribute names.
In such cases, the names will be transformed into approximations which may include
the zero-index number of the field's position in the header line.

One known example is the header line in the transactions files of the Hancock-Whitney Bank.
That transaction file header is shown below. Notice the order of the Debit/Credit column
is the 

=begin code
Date,Check#,Transaction Type,Description,Debits (-),Credits(+)
=end code

It is transformed into this header for attribute naming:

=begin code
Date,Check,TransactionType,Description,Debit,Credit
=end code

On the other hand, Synovus Bank has the following header for its transactions CSV file.
The field names work fine after down-casing them:

=begin code
Date,Account,Description,Category,Check,Credit,Debit
=end code

In both cases the class attribute names are clear and objects created from the CSV 
files should be good translations of the attribute values B<as strings>. However,
the meaning of the columns may not be obvious, nor may the transactions be 
unique if the files are concatenated erronously by the user in processing the downloads.

=head2 Possible improvements

In like manner to module C<App::Mi6>, add an INI file to the user's C<> directory to be used
for defining translations for CSV files. Such translations could be modified by
the user if the user wishes to improve the transformation.

=head1 AUTHOR

Tom Browder <tbrowder@acm.org>

=head1 COPYRIGHT AND LICENSE

Copyright 2022 Tom Browder

This library is free software; you may redistribute it or modify it under the Artistic License 2.0.

=end pod
